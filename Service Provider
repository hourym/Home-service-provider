Imports System.IO
Imports System.Data.SqlClient
Public Class frmSeviceProvider
    Dim x, y As Integer
    Dim newpoint As New Point
   
    Private Sub lblCaption_MouseDown(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles lblCaption.MouseDown
        x = Control.MousePosition.X - Me.Location.X
        y = Control.MousePosition.Y - Me.Location.Y
    End Sub

    Private Sub lblCaption_MouseMove(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles lblCaption.MouseMove
        If e.Button = Windows.Forms.MouseButtons.Left Then
            newpoint = Control.MousePosition
            newpoint.X -= x
            newpoint.Y -= y
            Me.Location = newpoint
            Application.DoEvents()
        End If
    End Sub
    'Private Sub loadServiceProvider()
    '    Dim qry As String
    '    qry = "SELECT        tbl_ServiceProviders.Srv_provider_id, tbl_ServiceProviders.Name, tbl_ServiceProviders.Mobile, tbl_ServiceProviders.RatePerHour, tbl_ServiceProviders.CityID, tbl_ServiceProviders.ServiceID, tbl_ServiceProviders.note, " & _
    '                  "   tbl_Cities.name AS City, tbl_Services.ServiceName as Service " & _
    '                   "  FROM            tbl_ServiceProviders INNER JOIN " & _
    '                   "   tbl_Cities ON tbl_ServiceProviders.CityID = tbl_Cities.CityID INNER JOIN " & _
    '                   "   tbl_Services ON tbl_ServiceProviders.ServiceID = tbl_Services.ServiceID "

    '    FillDataGrid(qry, dgv)
    '    If dgv.Rows.Count > 0 Then
    '        lblCount.Text = "Total " & dgv.Rows.Count & " services found."
    '    Else
    '        lblCount.Text = "Total 0 service found."
    '    End If
    'End Sub

    Private Sub loadServiceProvider(Optional searchTerm As String = "")
        Try
            Dim qry As String = "SELECT tbl_ServiceProviders.Srv_provider_id, tbl_ServiceProviders.Name, tbl_ServiceProviders.Mobile, tbl_ServiceProviders.RatePerHour, tbl_ServiceProviders.CityID, tbl_ServiceProviders.ServiceID, tbl_ServiceProviders.note, " & _
                          "   tbl_Cities.name AS City, tbl_Services.ServiceName as Service " & _
                           "  FROM            tbl_ServiceProviders INNER JOIN " & _
                           "   tbl_Cities ON tbl_ServiceProviders.CityID = tbl_Cities.CityID INNER JOIN " & _
                           "   tbl_Services ON tbl_ServiceProviders.ServiceID = tbl_Services.ServiceID " & _
                           "  WHERE tbl_ServiceProviders.Name LIKE '%" & searchTerm & "%'"

            If String.IsNullOrEmpty(searchTerm) Then
                qry = qry.Replace("WHERE tbl_ServiceProviders.Name LIKE '%" & searchTerm & "%'", "")
            End If

            FillDataGrid(qry, dgv)

            If dgv.Rows.Count > 0 Then
                lblCount.Text = "Total " & dgv.Rows.Count & " services found."
            Else
                lblCount.Text = "Total 0 service found."
            End If
        Catch ex As Exception
            MsgBox(ex.Message.ToString)
        End Try
    End Sub


    Private Sub frmService_Load(sender As System.Object, e As System.EventArgs) Handles MyBase.Load
        FillDataComboBox("select CityID,name from tbl_cities ", "CityID", "name", cmbCity)
        cmbCity.SelectedIndex = -1
        FillDataComboBox("select Serviceid,ServiceName from tbl_services ", "Serviceid", "ServiceName", cmbService)
        cmbService.SelectedIndex = -1
        txtName.Select()
        loadServiceProvider()
    End Sub

    Private Sub btnSave_Click(sender As System.Object, e As System.EventArgs) Handles btnSave.Click
        If txtName.Text = "" Then
            MsgBox("Required: name", MsgBoxStyle.Information, "Information")
        ElseIf txtMobile.Text = "" Then
            MsgBox("Required: mobile", MsgBoxStyle.Information, "Information")
        ElseIf cmbCity.SelectedIndex = -1 Then
            MsgBox("Required: city", MsgBoxStyle.Information, "Information")
        ElseIf txtRatePerHour.Text = "" Then
            MsgBox("Required: rate", MsgBoxStyle.Information, "Information")
        ElseIf cmbService.SelectedIndex = -1 Then
            MsgBox("Required: service", MsgBoxStyle.Information, "Information")
        Else
            If btnSave.Text = "SAVE" Then
                'insert  a new serviceprovider
                ExecuteSQLQuery(" INSERT INTO tbl_ServiceProviders (name,Mobile,CityId,RatePerHour,ServiceId,note) VALUES " & _
                                " ('" & str_repl(txtName.Text) & "','" & txtMobile.Text & "' ,'" & cmbCity.SelectedValue & "','" & txtRatePerHour.Text & "','" & cmbService.SelectedValue & "','" & txtNote.Text & "') ")
                'get service inserted id no
                'ExecuteSQLQuery("SELECT   serviceId  FROM   tbl_ServiceProviders  ORDER BY Name DESC")
                'Dim EMPL_ID As Double = sqlDT.Rows(0)("serviceid")
                txtName.Text = ""
                txtMobile.Text = ""
                cmbCity.SelectedIndex = -1
                txtRatePerHour.Text = ""
                cmbService.SelectedIndex = -1
                txtNote.Text = ""
                loadServiceProvider()
                MsgBox("New record has been added on database successfully.", MsgBoxStyle.Information, "Information")
            ElseIf btnSave.Text = "UPDATE" Then
                ExecuteSQLQuery("UPDATE tbl_ServiceProviders SET name = '" & str_repl(txtName.Text) & "', Mobile = '" & txtMobile.Text & "', " & _
    "CityId = '" & cmbCity.SelectedValue & "', RatePerHour = '" & txtRatePerHour.Text & "', ServiceId = '" & cmbService.SelectedValue & "', note = '" & txtNote.Text & "' WHERE Srv_provider_id = '" & txtProviderID.Text & "' ")
                txtName.Text = ""
                txtMobile.Text = ""
                cmbCity.SelectedIndex = -1
                txtRatePerHour.Text = ""
                cmbService.SelectedIndex = -1
                txtNote.Text = ""
                loadServiceProvider()
                btnSave.Text = "SAVE"
                MsgBox("Record updated successful.", MsgBoxStyle.Information, "Information")
            End If
        End If
    End Sub

    Private Sub btnRefresh_Click(sender As System.Object, e As System.EventArgs) Handles btnRefresh.Click
        loadServiceProvider()
    End Sub

    Private Sub btnExit_Click(sender As System.Object, e As System.EventArgs) Handles btnExit.Click
        Me.Close()
    End Sub

    Private Sub dgv_CellContentClick(sender As System.Object, e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgv.CellContentClick
        Dim columnName As String = dgv.Columns(e.ColumnIndex).Name
        If columnName = "EDIT" Then
            If MsgBox("Are you sure to edit ?", MsgBoxStyle.YesNo + MsgBoxStyle.Exclamation, "Confirm..") = MsgBoxResult.Yes Then
                On Error Resume Next
                ExecuteSQLQuery("SELECT * FROM tbl_ServiceProviders WHERE Srv_provider_id=" & dgv.CurrentRow.Cells("Srv_provider_id").Value & " ")
                txtProviderID.Text = sqlDT.Rows(0)("Srv_provider_id")
                txtName.Text = sqlDT.Rows(0)("name")
                txtMobile.Text = sqlDT.Rows(0)("Mobile")
                cmbCity.SelectedValue = sqlDT.Rows(0)("CityId")
                txtRatePerHour.Text = sqlDT.Rows(0)("RatePerHour")
                cmbService.SelectedValue = sqlDT.Rows(0)("ServiceId")
                txtNote.Text = sqlDT.Rows(0)("note")
                btnSave.Text = "UPDATE"
            End If
        ElseIf columnName = "DELETE" Then
            If MsgBox("Are you sure to delete ?", MsgBoxStyle.YesNo + MsgBoxStyle.Exclamation, "Confirm..") = MsgBoxResult.Yes Then
                ExecuteSQLQuery("delete  tbl_ServiceProviders WHERE Srv_provider_id=" & dgv.CurrentRow.Cells("Srv_provider_id").Value & " ")
                loadServiceProvider()
            End If
        End If
    End Sub

    Private Sub btnSearch_Click(sender As System.Object, e As System.EventArgs) Handles btnSearch.Click
        Dim searchTerm As String = "%" & txtName.Text & "%"
        loadServiceProvider(searchTerm)
    End Sub
End Class



SERVICE PROVIDER SEARCH 

Imports System.IO
Imports System.Data.SqlClient
Public Class frmServiceProviderSearch
    Dim x, y As Integer
    Dim newpoint As New Point
    Public Project_id As New Double
    Private amount_provider As Double = Nothing
    Public Provider_id As New Double
    Private Sub lblCaption_MouseDown(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles lblCaption.MouseDown
        x = Control.MousePosition.X - Me.Location.X
        y = Control.MousePosition.Y - Me.Location.Y
    End Sub

    Private Sub lblCaption_MouseMove(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles lblCaption.MouseMove
        If e.Button = Windows.Forms.MouseButtons.Left Then
            newpoint = Control.MousePosition
            newpoint.X -= x
            newpoint.Y -= y
            Me.Location = newpoint
            Application.DoEvents()
        End If
    End Sub
    Private Sub loadServiceProvider()

        Dim qry As String
        qry = "SELECT        tbl_ServiceProviders.Srv_provider_id, tbl_ServiceProviders.Name, tbl_ServiceProviders.Mobile, tbl_ServiceProviders.RatePerHour, tbl_ServiceProviders.CityID, tbl_ServiceProviders.ServiceID, tbl_ServiceProviders.note, " & _
                      "   tbl_Cities.name AS City, tbl_Services.ServiceName as Service " & _
                       "  FROM            tbl_ServiceProviders INNER JOIN " & _
                       "   tbl_Cities ON tbl_ServiceProviders.CityID = tbl_Cities.CityID INNER JOIN " & _
                       "   tbl_Services ON tbl_ServiceProviders.ServiceID = tbl_Services.ServiceID  WHERE 1 = 0 "

        FillDataGrid(qry, dgv)
        ' ExecuteSQLQuery("SELECT * FROM tbl_services")
        If dgv.Rows.Count > 0 Then
            lblCount.Text = "Total " & dgv.Rows.Count & " services found."
        Else
            lblCount.Text = "Total 0 service found."
        End If

    End Sub
    Private Sub frmService_Load(sender As System.Object, e As System.EventArgs) Handles MyBase.Load
        FillDataComboBox("select CityID,name from tbl_cities ", "CityID", "name", cmbCity)
        cmbCity.SelectedIndex = -1
        FillDataComboBox("select Serviceid,ServiceName from tbl_services ", "Serviceid", "ServiceName", cmbService)
        cmbService.SelectedIndex = -1
        txtName.Select()
        '  loadServiceProvider()
        If Not Project_id = 0.0 Then
            dgv.Columns("ASSIGN").Visible = True
        Else
            dgv.Columns("ASSIGN").Visible = False
        End If
    End Sub

    Public Sub PerformShownLogic()
        ' Your code logic here
        ' This code will be executed each time the form is shown
        FillDataComboBox("select CityID,name from tbl_cities ", "CityID", "name", cmbCity)
        cmbCity.SelectedIndex = -1
        FillDataComboBox("select Serviceid,ServiceName from tbl_services ", "Serviceid", "ServiceName", cmbService)
        cmbService.SelectedIndex = -1
        txtName.Select()
        loadServiceProvider()
        If Not Project_id = 0.0 Then
            dgv.Columns("ASSIGN").Visible = True
        Else
            dgv.Columns("ASSIGN").Visible = False
        End If
    End Sub

    Private Sub btnRefresh_Click(sender As System.Object, e As System.EventArgs) Handles btnRefresh.Click
        '  loadServiceProvider()
        dgv.DataSource = Nothing
        txtName.Text = ""
        cmbCity.SelectedIndex = -1
        cmbService.SelectedIndex = -1
        txtRatePerHour.Text = ""
        lblCount.Text = "......"

    End Sub

    Private Sub btnExit_Click(sender As System.Object, e As System.EventArgs) Handles btnExit.Click
        Project_id = Nothing
        Me.Close()
    End Sub

    Private Sub btnSearch_Click(sender As System.Object, e As System.EventArgs) Handles btnSearch.Click
      

        If txtRatePerHour.Text.Length > 0 And Not IsNumeric(txtRatePerHour.Text) Then
            MsgBox("Required: number for Rate Per hour", MsgBoxStyle.Information, "Information")
            Exit Sub
        End If

        ' Get the filter values from the form controls
        Dim name As String = txtName.Text
        Dim CityID As Integer = cmbCity.SelectedValue
        Dim ServiceID As Integer = cmbService.SelectedValue
        'Dim RatePerHour As Double = Val(txtRatePerHour.Text)

        ' Use the filter values to query the data source and populate the DataGridView
        Dim filteredData As DataTable = GetDataWithFilters(name, CityID, ServiceID)
        dgv.DataSource = filteredData
        If dgv.Rows.Count > 0 Then
            lblCount.Text = "Total " & dgv.Rows.Count & " services found."
        Else
            lblCount.Text = "Total 0 service found."
        End If

    End Sub

    Private Sub dgv_CellContentClick(sender As System.Object, e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgv.CellContentClick
        Dim columnName As String = dgv.Columns(e.ColumnIndex).Name
        If columnName = "ASSIGN" Then
            Provider_id = dgv.CurrentRow.Cells("Srv_provider_id").Value
            Dim inputBoxResult As DialogResult = ShowInputDialog("Please provide amount to be paid for the provider:", "Assign Provider with Amount", amount_provider)
            If inputBoxResult = DialogResult.Cancel Then
                Exit Sub
            End If
        End If
    End Sub

    Public Function ShowInputDialog(ByVal prompt As String, ByVal title As String, ByRef inputValue As String) As DialogResult
        Using form As New Form()
            form.FormBorderStyle = FormBorderStyle.FixedDialog
            form.MinimizeBox = False
            form.MaximizeBox = False
            form.BackColor = Color.SteelBlue
            form.StartPosition = FormStartPosition.CenterParent
            form.ClientSize = New Size(300, 200)
            form.Text = title

            Dim lblPrompt As New Label() With {.Left = 20, .Top = 30, .Width = 260, .Text = prompt, .ForeColor = Color.White}
            Dim txtInput As New TextBox() With {.Left = 20, .Top = 50, .Width = 100, .Height = 50, .Multiline = False}


            Dim btnOK As Button
            Dim btnCancel As Button
            Dim btnNo As Button

            btnOK = New Button() With {.Text = "OK", .Left = 50, .Width = 75, .Top = 150, .ForeColor = Color.Gray, .Font = New Font(Font.FontFamily, Font.Size, FontStyle.Bold)}
            btnNo = New Button() With {.Text = "NO", .Left = 120, .Width = 75, .Top = 150, .ForeColor = Color.Gray, .Font = New Font(Font.FontFamily, Font.Size, FontStyle.Bold)}
            btnCancel = New Button() With {.Text = "Cancel", .Left = 180, .Width = 75, .Top = 150, .ForeColor = Color.Gray, .Font = New Font(Font.FontFamily, Font.Size, FontStyle.Bold)}
            form.Controls.Add(lblPrompt)
            form.Controls.Add(txtInput)
            form.Controls.Add(btnOK)
            form.Controls.Add(btnCancel)
            form.Controls.Add(btnNo)


            btnCancel.BackColor = Color.White
            btnOK.BackColor = Color.White
            btnNo.BackColor = Color.White

            Dim dialogResult As DialogResult = DialogResult.None ' Initialize the dialog result variable

            AddHandler btnOK.Click, AddressOf OKButton_Click
            AddHandler btnNo.Click, AddressOf noButton_Click
           
            AddHandler btnCancel.Click, Sub()
                                            form.DialogResult = dialogResult.Cancel
                                        End Sub

            ' Check if the record exists and retrieve the existing cost value
            Dim connectionString As String = CnString
            Dim selectQuery As String = "SELECT cost FROM tbl_assign_project_provider WHERE project_id = @projectId AND srv_provider_id = @providerId"

            Using connection As New SqlConnection(connectionString)
                connection.Open()

                Dim command As New SqlCommand(selectQuery, connection)
                command.Parameters.AddWithValue("@projectId", Project_id)
                command.Parameters.AddWithValue("@providerId", Provider_id)

                Dim existingCost As Object = command.ExecuteScalar()

                If existingCost IsNot Nothing AndAlso Not IsDBNull(existingCost) Then
                    ' Existing record found, fill txtInput with existing cost value
                    txtInput.Text = existingCost.ToString()
                End If
            End Using



            dialogResult = form.ShowDialog() ' Get the dialog result of the form

            Return dialogResult
        End Using
    End Function

    Private Sub OKButton_Click(ByVal sender As Object, ByVal e As EventArgs)
        Dim btnOK As Button = DirectCast(sender, Button)
        Dim form As Form = DirectCast(btnOK.FindForm(), Form)
        Dim txtInput As TextBox = form.Controls.OfType(Of TextBox)().FirstOrDefault()
        If Not IsNumeric(txtInput.Text) Then
            MsgBox("Required: Amount", MsgBoxStyle.Information, "Information")
            Exit Sub
        End If
        Dim connectionString As String = CnString
        Dim query As String = "SELECT COUNT(*) FROM tbl_assign_project_provider WHERE project_id = @projectId AND srv_provider_id = @providerId"
        Dim insertQuery As String = "INSERT INTO tbl_assign_project_provider (project_id, srv_provider_id, cost) VALUES (@projectId, @providerId, @cost)"
        Dim updateQuery As String = "UPDATE tbl_assign_project_provider SET cost = @cost WHERE project_id = @projectId AND srv_provider_id = @providerId"

        Using connection As New SqlConnection(connectionString)
            connection.Open()

            ' Check if the record exists
            Dim command As New SqlCommand(query, connection)
            command.Parameters.AddWithValue("@projectId", Project_id)
            command.Parameters.AddWithValue("@providerId", Provider_id)

            Dim recordExists As Integer = Convert.ToInt32(command.ExecuteScalar())

            If recordExists > 0 Then

                ' Update the existing record
                Dim updateCommand As New SqlCommand(updateQuery, connection)
                updateCommand.Parameters.AddWithValue("@projectId", Project_id)
                updateCommand.Parameters.AddWithValue("@providerId", Provider_id)
                updateCommand.Parameters.AddWithValue("@cost", CDbl(txtInput.Text))

                updateCommand.ExecuteNonQuery()
            Else
                ' Insert a new record
                Dim insertCommand As New SqlCommand(insertQuery, connection)
                insertCommand.Parameters.AddWithValue("@projectId", Project_id)
                insertCommand.Parameters.AddWithValue("@providerId", Provider_id)
                insertCommand.Parameters.AddWithValue("@cost", CDbl(txtInput.Text))

                insertCommand.ExecuteNonQuery()
            End If
        End Using

        form.DialogResult = DialogResult.OK
    End Sub
    Private Sub noButton_Click(ByVal sender As Object, ByVal e As EventArgs)
        Dim btnNo As Button = DirectCast(sender, Button)
        Dim form As Form = DirectCast(btnNo.FindForm(), Form)
        Dim txtInput As TextBox = form.Controls.OfType(Of TextBox)().FirstOrDefault()
        Dim connectionString As String = CnString
        Dim deleteQuery As String = "DELETE FROM tbl_assign_project_provider WHERE project_id = @projectId AND srv_provider_id = @providerId"

        Using connection As New SqlConnection(connectionString)
            connection.Open()

            Dim command As New SqlCommand(deleteQuery, connection)
            command.Parameters.AddWithValue("@projectId", Project_id)
            command.Parameters.AddWithValue("@providerId", Provider_id)

            command.ExecuteNonQuery()
        End Using
        form.DialogResult = DialogResult.No
    End Sub

    Private Function GetDataWithFilters(name As String, CityID As Integer, ServiceID As Integer, Optional RatePerHour As Double? = Nothing) As DataTable
        ' Create a new DataTable to store the filtered data
        Dim filteredData As New DataTable()

        ' TODO: Adjust the connection string to match your database
        Dim connectionString As String = CnString

        ' Create the SQL query with parameters based on the filter values
        Dim query As String = "SELECT        tbl_ServiceProviders.Srv_provider_id, tbl_ServiceProviders.Name, tbl_ServiceProviders.Mobile, tbl_ServiceProviders.RatePerHour, tbl_ServiceProviders.CityID, tbl_ServiceProviders.ServiceID, tbl_ServiceProviders.note, " & _
                      "   tbl_Cities.name AS City, tbl_Services.ServiceName as Service " & _
                       "  FROM            tbl_ServiceProviders INNER JOIN " & _
                       "   tbl_Cities ON tbl_ServiceProviders.CityID = tbl_Cities.CityID INNER JOIN " & _
                       "   tbl_Services ON tbl_ServiceProviders.ServiceID = tbl_Services.ServiceID  "

        If name <> "" Then
            query &= " AND tbl_ServiceProviders.Name LIKE '%' + @Name + '%'"
        End If
        ' Handle RatePerHour separately when a value is provided
        If txtRatePerHour.Text.Length > 0 Then
            query &= " AND tbl_ServiceProviders.RatePerHour <= @RatePerHour"
        End If

        If CityID <> 0 Then
            query &= " AND tbl_ServiceProviders.CityID = @CityID"
        End If

        If ServiceID <> 0 Then
            query &= " AND tbl_ServiceProviders.ServiceID = @ServiceID"
        End If

        ' Create a new SqlConnection and SqlCommand
        Using connection As New SqlConnection(connectionString)
            Using command As New SqlCommand(query, connection)
                ' Set the parameter values based on the filter values


                If name <> "" Then
                    command.Parameters.AddWithValue("@Name", name)
                End If

                If CityID <> 0 Then
                    command.Parameters.AddWithValue("@CityID", CityID)
                End If
                If ServiceID <> 0 Then
                    command.Parameters.AddWithValue("@ServiceID", ServiceID)
                End If
                ' Handle RatePerHour separately when a value is provided
                If txtRatePerHour.Text.Length > 0 Then
                    command.Parameters.AddWithValue("@RatePerHour", Val(txtRatePerHour.Text))
                End If

                ' Create a new SqlDataAdapter to fill the DataTable
                Dim adapter As New SqlDataAdapter(command)

                ' Open the connection and fill the DataTable
                connection.Open()
                adapter.Fill(filteredData)
            End Using
        End Using

        ' Return the filtered DataTable
        Return filteredData
    End Function

End Class
 



